<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:FileDiff">

	<SolidColorBrush x:Key="HighLightCellBrush" Color="#FFCBE8F6" />
	<SolidColorBrush x:Key="ControlColor" Color="#FFEEEEEE" />

	<!--<Style TargetType="Window">
		<Setter Property="Foreground" Value="{Binding WindowForeground, FallbackValue=Black}" />
		<Setter Property="Background" Value="{Binding DialogBackground, FallbackValue=#FFF0F0F0}" />
	</Style>-->

	<Style x:Key="StyledTextBox" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
		<Setter Property="Foreground" Value="{Binding WindowForeground, FallbackValue=Black}" />
	</Style>

	<Style x:Key="ShortcutTooltip" TargetType="TextBlock">
		<Setter Property="Margin" Value="20,0,0,0" />
		<Setter Property="Foreground" Value="Gray" />
	</Style>

	<Style TargetType="Border">
		<Setter Property="BorderBrush" Value="{Binding BorderColor, FallbackValue=#CCCCCC}" />
		<!--<Setter Property="Background" Value="{Binding DialogBackground, FallbackValue=#FFEDEDED}" />-->
	</Style>

	<Style x:Key="CommonGridSpliter" TargetType="GridSplitter">
		<Setter Property="BorderBrush" Value="{Binding BorderColor, FallbackValue=#FFCCCCCC}" />
		<Setter Property="Background" Value="{Binding DialogBackground, FallbackValue=#FFEDEDED}" />
	</Style>

	<Style TargetType="Label">
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Padding" Value="2" />
		<Setter Property="Margin" Value="5" />
		<Setter Property="Foreground" Value="{Binding WindowForeground, FallbackValue=Black}" />
	</Style>

	<Style x:Key="CondencedTextLabel" TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Padding" Value="2" />
		<Setter Property="Margin" Value="5,0" />
	</Style>

	<Style x:Key="CommonTextBox" TargetType="TextBox">
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Padding" Value="2" />
		<Setter Property="Margin" Value="5" />
		<Setter Property="Foreground" Value="{Binding WindowForeground, FallbackValue=Black}" />
		<Setter Property="Background" Value="{Binding WindowBackground, FallbackValue=White}" />
		<Setter Property="BorderBrush" Value="{Binding BorderColor, FallbackValue=#CCCCCC}" />
	</Style>

	<Style x:Key="CommonComboBox" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Margin" Value="5" />
	</Style>

	<Style x:Key="CommonButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
		<Setter Property="Padding" Value="3" />
		<Setter Property="Margin" Value="5" />
		<Setter Property="MinWidth" Value="80" />
	</Style>

	<Style x:Key="FlatButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Margin" Value="4,2" />
		<Setter Property="Padding" Value="2" />
		<Setter Property="MinWidth" Value="1" />
	</Style>

	<Style x:Key="CommonCheckBox" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
		<Setter Property="Margin" Value="5" />
	</Style>

	<Style x:Key="CommonButtonIcon" TargetType="ContentPresenter">
		<Setter Property="MaxHeight" Value="16" />
		<Setter Property="MaxWidth" Value="16" />
		<Setter Property="Margin" Value="2" />
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="0.4" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="ToolbarButton" TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
		<Setter Property="Margin" Value="2" />
		<Setter Property="Padding" Value="3" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="BorderThickness" Value="0" />

		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="Transparent" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="ToolbarToggleButton" TargetType="ToggleButton" BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
		<Setter Property="Margin" Value="2" />
		<Setter Property="Padding" Value="3" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="BorderThickness" Value="0" />
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="Transparent" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="EditableDataGridCell" TargetType="{x:Type DataGridCell}">
		<Style.Triggers>
			<Trigger Property="DataGridCell.IsSelected" Value="True">
				<Setter Property="Background" Value="{StaticResource HighLightCellBrush}" />
				<Setter Property="BorderBrush" Value="#CCDAFF" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Foreground" Value="Black" />
			</Trigger>
			<Trigger Property="DataGridCell.IsFocused" Value="False">
				<Setter Property="Background" Value="{StaticResource {x:Static SystemColors.WindowBrushKey}}" />
				<Setter Property="BorderBrush" Value="{StaticResource {x:Static SystemColors.WindowBrushKey}}" />
			</Trigger>
			<Trigger Property="DataGridCell.IsFocused" Value="True">
				<Setter Property="Background" Value="{StaticResource HighLightCellBrush}" />
				<Setter Property="BorderBrush" Value="#CCDAFF" />
				<Setter Property="BorderThickness" Value="1" />
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>
