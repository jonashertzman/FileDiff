<Window
	x:Class="FileDiff.MainWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:local="clr-namespace:FileDiff"
	Title="{Binding Title, FallbackValue='File Diff'}"
	Width="900"
	Height="500"
	d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel}"
	TextOptions.TextFormattingMode="Display"
	UseLayoutRounding="True"
	ResizeMode="CanResizeWithGrip"
	Closed="Window_Closed"
	ContentRendered="Window_ContentRendered"
	Initialized="Window_Initialized"
	Background="{Binding DialogBackground, FallbackValue=#FFF0F0F0}"
	mc:Ignorable="d">

	<Window.Resources>

		<ContextMenu x:Key="ContextMenuFileItem">
			<MenuItem Command="local:Commands.OpenContainingFolder" />
			<MenuItem Command="local:Commands.CopyPathToClipboard" />
		</ContextMenu>

		<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
		<local:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
		<local:InverseBooleanConverter x:Key="InverseBooleanConverter" />

	</Window.Resources>

	<Window.CommandBindings>
		<CommandBinding Command="local:Commands.CancelCompare" Executed="CommandCancelCompare_Executed" />
	</Window.CommandBindings>

	<Grid>
		<DockPanel IsEnabled="{Binding Path=GuiFrozen, Converter={StaticResource InverseBooleanConverter}}">
			<DockPanel.CommandBindings>
				<CommandBinding Command="local:Commands.Compare" Executed="CommandCompare_Executed" />
				<CommandBinding Command="local:Commands.ExperimentalCompare" Executed="CommandCompare_Executed" />
				<CommandBinding Command="local:Commands.SaveLeftFile" Executed="CommandSaveLeftFile_Executed" CanExecute="CommandSaveLeftFile_CanExecute" />
				<CommandBinding Command="local:Commands.SaveRightFile" Executed="CommandSaveRightFile_Executed" CanExecute="CommandSaveRightFile_CanExecute" />
				<CommandBinding Command="local:Commands.Edit" CanExecute="CommandEdit_CanExecute" />
				<CommandBinding Command="local:Commands.Swap" Executed="CommandSwap_Executed" />
				<CommandBinding Command="local:Commands.Up" Executed="CommandUp_Executed" />
				<CommandBinding Command="local:Commands.PreviousDiff" Executed="CommandPreviousDiff_Executed" CanExecute="CommandPreviousDiff_CanExecute" />
				<CommandBinding Command="local:Commands.NextDiff" Executed="CommandNextDiff_Executed" CanExecute="CommandNextDiff_CanExecute" />
				<CommandBinding Command="local:Commands.CurrentDiff" Executed="CommandCurrentDiff_Executed" CanExecute="CommandCurrentDiff_CanExecute" />
				<CommandBinding Command="local:Commands.FirstDiff" Executed="CommandFirstDiff_Executed" CanExecute="CommandFirstDiff_CanExecute" />
				<CommandBinding Command="local:Commands.LastDiff" Executed="CommandLastDiff_Executed" CanExecute="CommandLastDiff_CanExecute" />
				<CommandBinding Command="local:Commands.NextFile" Executed="CommandNextFile_Executed" CanExecute="CommandNextFile_CanExecute" />
				<CommandBinding Command="local:Commands.PreviousFile" Executed="CommandPreviousFile_Executed" CanExecute="CommandPreviousFile_CanExecute" />
				<CommandBinding Command="local:Commands.CopyLeftDiff" Executed="CommandCopyLeftDiff_Executed" CanExecute="CommandCopyLeftDiff_CanExecute" />
				<CommandBinding Command="local:Commands.CopyRightDiff" Executed="CommandCopyRightDiff_Executed" CanExecute="CommandCopyRightDiff_CanExecute" />
				<CommandBinding Command="local:Commands.Exit" Executed="CommandExit_Executed" />
				<CommandBinding Command="local:Commands.About" Executed="CommandAbout_Executed" />
				<CommandBinding Command="local:Commands.BrowseLeft" Executed="CommandBrowseLeft_Executed" />
				<CommandBinding Command="local:Commands.BrowseRight" Executed="CommandBrowseRight_Executed" />
				<CommandBinding Command="local:Commands.Options" Executed="CommnadOptions_Executed" />
				<CommandBinding Command="local:Commands.Find" Executed="CommandFind_Executed" />
				<CommandBinding Command="local:Commands.FindNext" Executed="CommandFindNext_Executed" CanExecute="CommandFindNext_CanExecute" />
				<CommandBinding Command="local:Commands.FindPrevious" Executed="CommandFindPrevious_Executed" CanExecute="CommandFindPrevious_CanExecute_1" />
				<CommandBinding Command="local:Commands.CloseFind" Executed="CommandCloseFind_Executed" />
				<CommandBinding Command="local:Commands.ZoomIn" Executed="CommandZoomIn_Executed" />
				<CommandBinding Command="local:Commands.ZoomOut" Executed="CommandZoomOut_Executed" />
				<CommandBinding Command="local:Commands.ResetZoom" Executed="CommandResetZoom_Executed" />
				<CommandBinding Command="local:Commands.OpenContainingFolder" Executed="CommandOpenContainingFolder_Executed" CanExecute="CommandOpenContainingFolder_CanExecute" />
				<CommandBinding Command="local:Commands.CopyPathToClipboard" Executed="CommandCopyPathToClipboard_Executed" CanExecute="CommandCopyPathToClipboard_CanExecute" />
			</DockPanel.CommandBindings>

			<!--  Menu  -->
			<Border DockPanel.Dock="Top" BorderBrush="{Binding BorderForeground, FallbackValue=#FFD6D6D6}" Background="{Binding WindowBackground, FallbackValue=#FFFFFF}" BorderThickness="0,0,0,1">
				<Grid x:Name="GridMenu">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<Menu Margin="2" VerticalAlignment="Center">
						<MenuItem Header="File">
							<MenuItem Header="Exit" Command="local:Commands.Exit" />
						</MenuItem>
						<MenuItem Header="Edit">
							<MenuItem Header="Find" Command="local:Commands.Find" />
							<MenuItem Header="Find Next" Command="local:Commands.FindNext" />
							<MenuItem Header="Find Previous" Command="local:Commands.FindPrevious" />
						</MenuItem>
						<MenuItem Header="View">
							<MenuItem Header="Zoom In" Command="local:Commands.ZoomIn" />
							<MenuItem Header="Zoom Out" Command="local:Commands.ZoomOut" />
							<MenuItem Header="Reset Zoom" Command="local:Commands.ResetZoom" />
						</MenuItem>
						<MenuItem Header="Tools">
							<MenuItem Header="Options" Command="local:Commands.Options" />
						</MenuItem>
						<MenuItem Header="Help">
							<MenuItem Header="About" Command="local:Commands.About" />
						</MenuItem>
					</Menu>
					<StackPanel x:Name="UpdatePanel" Grid.Column="1" Orientation="Horizontal" Visibility="{Binding Path=NewBuildAvailable, Converter={StaticResource BooleanToVisibilityConverter}}">
						<Label Margin="3,3,6,3" Padding="0" VerticalAlignment="Center">
							<Hyperlink RequestNavigate="Hyperlink_OpenHomepage" NavigateUri="https://github.com/jonashertzman/FileDiff/blob/master/README.md">New Version Available</Hyperlink>
						</Label>
						<!--<Button BorderThickness="0" Margin="3" Padding="0" Foreground="{StaticResource {x:Static SystemColors.ScrollBarBrushKey} }" Background="Transparent" VerticalAlignment="Center" Click="Button_Click">
							&#x274C;
						</Button>-->
					</StackPanel>
				</Grid>
			</Border>

			<!--  Main Toolbar  -->
			<WrapPanel x:Name="ToolbarMain" DockPanel.Dock="Top" Orientation="Horizontal">
				<WrapPanel.Background>
					<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
						<GradientStop Offset="0" Color="{Binding WindowBackground.Color, FallbackValue=White}" />
						<GradientStop Offset="1" Color="{Binding DialogBackground.Color, FallbackValue=#FFF0F0F0}" />
					</LinearGradientBrush>
				</WrapPanel.Background>

				<StackPanel Orientation="Horizontal">

					<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.Compare">
						<StackPanel Orientation="Horizontal">
							<ContentPresenter ContentTemplate="{StaticResource CompareIcon}" Style="{StaticResource CommonButtonIcon}" />
						</StackPanel>
						<Button.ToolTip>
							<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="{Binding Path=Command.Text}" />
									<TextBlock Text="F5" Style="{StaticResource ShortcutTooltip}" />
								</StackPanel>
							</ToolTip>
						</Button.ToolTip>
					</Button>

					<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.SaveLeftFile">
						<StackPanel Orientation="Horizontal">
							<ContentPresenter ContentTemplate="{StaticResource SaveIcon}" Style="{StaticResource CommonButtonIcon}" />
						</StackPanel>
						<Button.ToolTip>
							<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="{Binding Path=Command.Text}" />
								</StackPanel>
							</ToolTip>
						</Button.ToolTip>
					</Button>

					<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.SaveRightFile">
						<StackPanel Orientation="Horizontal">
							<ContentPresenter ContentTemplate="{StaticResource SaveIcon2}" Style="{StaticResource CommonButtonIcon}" />
						</StackPanel>
						<Button.ToolTip>
							<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="{Binding Path=Command.Text}" />
								</StackPanel>
							</ToolTip>
						</Button.ToolTip>
					</Button>

					<ToggleButton Command="local:Commands.Edit" IsEnabled="{Binding FileVissible}" IsChecked="{Binding EditMode}">
						<ToggleButton.Resources>
							<DataTemplate x:Key="Unpressed">
								<StackPanel Orientation="Horizontal">
									<ContentPresenter ContentTemplate="{StaticResource EditIcon}" Style="{StaticResource CommonButtonIcon}" />
									<StackPanel.ToolTip>
										<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
											<StackPanel Orientation="Horizontal">
												<TextBlock Text="Enable Editing" />
											</StackPanel>
										</ToolTip>
									</StackPanel.ToolTip>
								</StackPanel>
							</DataTemplate>
							<DataTemplate x:Key="Pressed">
								<StackPanel Orientation="Horizontal">
									<ContentPresenter ContentTemplate="{StaticResource EditIcon2}" Style="{StaticResource CommonButtonIcon}" />
									<StackPanel.ToolTip>
										<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
											<StackPanel Orientation="Horizontal">
												<TextBlock Text="Unlocked" />
											</StackPanel>
										</ToolTip>
									</StackPanel.ToolTip>
								</StackPanel>
							</DataTemplate>
						</ToggleButton.Resources>
						<ToggleButton.Style>
							<Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToolbarToggleButton}">
								<Setter Property="ContentTemplate" Value="{StaticResource Unpressed}" />
								<Style.Triggers>
									<Trigger Property="IsChecked" Value="True">
										<Setter Property="ContentTemplate" Value="{StaticResource Pressed}" />
									</Trigger>
								</Style.Triggers>
							</Style>
						</ToggleButton.Style>
						<ToggleButton.ToolTip>
							<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="{Binding Path=Command.Text}" />
								</StackPanel>
							</ToolTip>
						</ToggleButton.ToolTip>
					</ToggleButton>

					<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.Swap">
						<StackPanel Orientation="Horizontal">
							<ContentPresenter ContentTemplate="{StaticResource SwapIcon}" Style="{StaticResource CommonButtonIcon}" />
						</StackPanel>
						<Button.ToolTip>
							<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="{Binding Path=Command.Text}" />
								</StackPanel>
							</ToolTip>
						</Button.ToolTip>
					</Button>

					<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.Up">
						<StackPanel Orientation="Horizontal">
							<ContentPresenter ContentTemplate="{StaticResource UpIcon}" Style="{StaticResource CommonButtonIcon}" />
						</StackPanel>
						<Button.ToolTip>
							<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="{Binding Path=Command.Text}" />
								</StackPanel>
							</ToolTip>
						</Button.ToolTip>
					</Button>

					<Separator />

				</StackPanel>

				<StackPanel Orientation="Horizontal">

					<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.PreviousFile">
						<StackPanel Orientation="Horizontal">
							<ContentPresenter ContentTemplate="{StaticResource PreviousFileIcon}" Style="{StaticResource CommonButtonIcon}" />
						</StackPanel>
						<Button.ToolTip>
							<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="{Binding Path=Command.Text}" />
									<TextBlock Text="Ctrl+Page Up" Style="{StaticResource ShortcutTooltip}" />
								</StackPanel>
							</ToolTip>
						</Button.ToolTip>
					</Button>

					<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.NextFile">
						<StackPanel Orientation="Horizontal">
							<ContentPresenter ContentTemplate="{StaticResource NextFileIcon}" Style="{StaticResource CommonButtonIcon}" />
						</StackPanel>
						<Button.ToolTip>
							<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="{Binding Path=Command.Text}" />
									<TextBlock Text="Ctrl+Page Down" Style="{StaticResource ShortcutTooltip}" />
								</StackPanel>
							</ToolTip>
						</Button.ToolTip>
					</Button>

					<Separator />

				</StackPanel>

				<StackPanel Orientation="Horizontal">

					<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.FirstDiff">
						<StackPanel Orientation="Horizontal">
							<ContentPresenter ContentTemplate="{StaticResource FirstDiffIcon}" Style="{StaticResource CommonButtonIcon}" />
						</StackPanel>
						<Button.ToolTip>
							<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="{Binding Path=Command.Text}" />
									<TextBlock Text="Ctrl+Up" Style="{StaticResource ShortcutTooltip}" />
								</StackPanel>
							</ToolTip>
						</Button.ToolTip>
					</Button>

					<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.PreviousDiff">
						<StackPanel Orientation="Horizontal">
							<ContentPresenter ContentTemplate="{StaticResource PreviousDiffIcon}" Style="{StaticResource CommonButtonIcon}" />
						</StackPanel>
						<Button.ToolTip>
							<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="{Binding Path=Command.Text}" />
									<TextBlock Text="Up" Style="{StaticResource ShortcutTooltip}" />
								</StackPanel>
							</ToolTip>
						</Button.ToolTip>
					</Button>

					<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.CurrentDiff">
						<StackPanel Orientation="Horizontal">
							<ContentPresenter ContentTemplate="{StaticResource CurrentDiffIcon}" Style="{StaticResource CommonButtonIcon}" />
						</StackPanel>
						<Button.ToolTip>
							<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="{Binding Path=Command.Text}" />
									<TextBlock Text="Ctrl+Space" Style="{StaticResource ShortcutTooltip}" />
								</StackPanel>
							</ToolTip>
						</Button.ToolTip>
					</Button>

					<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.NextDiff">
						<StackPanel Orientation="Horizontal">
							<ContentPresenter ContentTemplate="{StaticResource NextDiffIcon}" Style="{StaticResource CommonButtonIcon}" />
						</StackPanel>
						<Button.ToolTip>
							<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="{Binding Path=Command.Text}" />
									<TextBlock Text="Down" Style="{StaticResource ShortcutTooltip}" />
								</StackPanel>
							</ToolTip>
						</Button.ToolTip>
					</Button>

					<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.LastDiff">
						<StackPanel Orientation="Horizontal">
							<ContentPresenter ContentTemplate="{StaticResource LastDiffIcon}" Style="{StaticResource CommonButtonIcon}" />
						</StackPanel>
						<Button.ToolTip>
							<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="{Binding Path=Command.Text}" />
									<TextBlock Text="Ctrl+Down" Style="{StaticResource ShortcutTooltip}" />
								</StackPanel>
							</ToolTip>
						</Button.ToolTip>
					</Button>

					<Separator />

				</StackPanel>

				<StackPanel Orientation="Horizontal">

					<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.CopyLeftDiff" IsEnabled="{Binding FileVissible}">
						<StackPanel Orientation="Horizontal">
							<ContentPresenter ContentTemplate="{StaticResource CopyLeftSide}" Style="{StaticResource CommonButtonIcon}" />
						</StackPanel>
						<Button.ToolTip>
							<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="{Binding Path=Command.Text}" />
									<TextBlock Text="Ctrl+Right" Style="{StaticResource ShortcutTooltip}" />
								</StackPanel>
							</ToolTip>
						</Button.ToolTip>
					</Button>

					<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.CopyRightDiff" IsEnabled="{Binding FileVissible}">
						<StackPanel Orientation="Horizontal">
							<ContentPresenter ContentTemplate="{StaticResource CopyRightSide}" Style="{StaticResource CommonButtonIcon}" />
						</StackPanel>
						<Button.ToolTip>
							<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="{Binding Path=Command.Text}" />
									<TextBlock Text="Ctrl+Left" Style="{StaticResource ShortcutTooltip}" />
								</StackPanel>
							</ToolTip>
						</Button.ToolTip>
					</Button>

					<ToggleButton x:Name="ToggleButtonShowLineChanges" IsEnabled="{Binding FileVissible}" Style="{StaticResource ToolbarToggleButton}" IsChecked="{Binding ShowLineChanges}">
						<StackPanel Orientation="Horizontal">
							<ContentPresenter ContentTemplate="{StaticResource ShowLineChangesIcon}" Style="{StaticResource CommonButtonIcon}" />
						</StackPanel>
						<ToggleButton.ToolTip>
							<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="Show Line Changes" />
								</StackPanel>
							</ToolTip>
						</ToggleButton.ToolTip>
					</ToggleButton>

					<ToggleButton x:Name="ToggleButtonDetectMovedLines" IsEnabled="{Binding FileVissible}" Style="{StaticResource ToolbarToggleButton}" IsChecked="{Binding DetectMovedLines}" Click="ToggleButtonNeedRecompare_Click">
						<StackPanel Orientation="Horizontal">
							<ContentPresenter ContentTemplate="{StaticResource DetectMovedLines}" Style="{StaticResource CommonButtonIcon}" />
						</StackPanel>
						<ToggleButton.ToolTip>
							<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="Detect Moved Lines" />
								</StackPanel>
							</ToolTip>
						</ToggleButton.ToolTip>
					</ToggleButton>

					<ToggleButton x:Name="ToggleButtonIgnoreWhiteSpace" IsEnabled="{Binding FileVissible}" Style="{StaticResource ToolbarToggleButton}" IsChecked="{Binding IgnoreWhiteSpace}" Click="ToggleButtonNeedRecompare_Click">
						<StackPanel Orientation="Horizontal">
							<ContentPresenter ContentTemplate="{StaticResource IgnoreWhiteSpaceIcon}" Style="{StaticResource CommonButtonIcon}" />
						</StackPanel>
						<ToggleButton.ToolTip>
							<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="Ignore White Space" />
								</StackPanel>
							</ToolTip>
						</ToggleButton.ToolTip>
					</ToggleButton>

					<ToggleButton x:Name="ToggleButtonShowWhiteSpaceCharacters" IsEnabled="{Binding FileVissible}" Style="{StaticResource ToolbarToggleButton}" IsChecked="{Binding ShowWhiteSpaceCharacters}">
						<StackPanel Orientation="Horizontal">
							<ContentPresenter ContentTemplate="{StaticResource ShowSpecialCharactersIcon}" Style="{StaticResource CommonButtonIcon}" />
						</StackPanel>
						<ToggleButton.ToolTip>
							<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
								<StackPanel Orientation="Horizontal">
									<TextBlock VerticalAlignment="Center" Text="Show Special Characters" />
								</StackPanel>
							</ToolTip>
						</ToggleButton.ToolTip>
					</ToggleButton>

					<ToggleButton x:Name="ToggleButtonMasterDetail" IsEnabled="{Binding FolderVissible}" Style="{StaticResource ToolbarToggleButton}" IsChecked="{Binding MasterDetail}" Click="ToggleButtonMasterDetail_Click">
						<StackPanel Orientation="Horizontal">
							<ContentPresenter ContentTemplate="{StaticResource MasterDetailIcon}" Style="{StaticResource CommonButtonIcon}" />
						</StackPanel>
						<ToggleButton.ToolTip>
							<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
								<StackPanel Orientation="Horizontal">
									<TextBlock VerticalAlignment="Center" Text="Master Detail View" />
								</StackPanel>
							</ToolTip>
						</ToggleButton.ToolTip>
					</ToggleButton>

				</StackPanel>

			</WrapPanel>

			<!--  Main Content  -->
			<Grid Name="GridMainContent">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Name="FolderRow" Height="{Binding FolderRowHeight, Mode=TwoWay}" />
					<RowDefinition Name="SplitterRow" Height="Auto" />
					<RowDefinition Name="FileRow" Height="{Binding FileRowHeight}" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<!--  Left Path  -->
				<Border Grid.Column="0" BorderThickness="0,1,1,0" PreviewDragOver="LeftSide_PreviewDragOver" PreviewDrop="LeftSide_DragDrop" AllowDrop="True">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<TextBox Name="TextBoxLeftPath" Grid.Column="0" Margin="0" Padding="2" Text="{Binding LeftPath, UpdateSourceTrigger=LostFocus, FallbackValue=Left Path}" Style="{StaticResource CommonTextBox}" BorderThickness="0" PreviewDragOver="LeftSide_PreviewDragOver" PreviewDrop="LeftSide_DragDrop" />
						<Button x:Name="ButtonLeftBrowse" Grid.Column="1" Width="20" Content="..." BorderThickness="0" Command="local:Commands.BrowseLeft" />
					</Grid>
				</Border>

				<!--  Left Folder  -->
				<Border Grid.Row="1" Grid.Column="0" BorderThickness="0,1,1,1" PreviewDragOver="LeftSide_PreviewDragOver" PreviewDrop="LeftSide_DragDrop" AllowDrop="True">
					<Grid Name="LeftFolderGrid" MouseWheel="FolderDiff_MouseWheel">
						<Grid.RowDefinitions>
							<RowDefinition Height="auto" />
							<RowDefinition Height="*" />
							<RowDefinition Height="auto" />
						</Grid.RowDefinitions>

						<ScrollViewer Name="LeftColumnScroll" ScrollChanged="LeftColumnScroll_ScrollChanged" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden">
							<Grid Name="LeftColumns" HorizontalAlignment="Left">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="{Binding NameColumnWidth}" />
									<ColumnDefinition Width="4" />
									<ColumnDefinition Width="{Binding SizeColumnWidth}" />
									<ColumnDefinition Width="4" />
									<ColumnDefinition Width="{Binding DateColumnWidth}" />
									<ColumnDefinition Width="4" />
								</Grid.ColumnDefinitions>

								<TextBlock Grid.Column="0" Padding="3,2" Text="Name" TextTrimming="CharacterEllipsis" SizeChanged="LeftColumns_Resized" />
								<GridSplitter Grid.Column="1" Width="4" HorizontalAlignment="Left" BorderThickness="0,0,1,0" Focusable="False" Style="{StaticResource CommonGridSpliter}" />
								<TextBlock Grid.Column=" 2" Padding="3,2" Text="Size" TextTrimming="CharacterEllipsis" SizeChanged="LeftColumns_Resized" TextAlignment="Right" />
								<GridSplitter Grid.Column=" 3" Width=" 4" HorizontalAlignment="Left" BorderThickness="0,0,1,0" Focusable=" False" Style="{StaticResource CommonGridSpliter}" />
								<TextBlock Grid.Column="4" Padding="3,2" Text="Date" TextTrimming="CharacterEllipsis" SizeChanged="LeftColumns_Resized" />
								<GridSplitter Grid.Column=" 5" Width=" 4" HorizontalAlignment="Left" BorderThickness="0,0,1,0" Focusable=" False" Style="{StaticResource CommonGridSpliter}" />
							</Grid>
						</ScrollViewer>

						<Border Grid.Row="1" Grid.Column="0" Background="{Binding WindowBackground, FallbackValue=#FFFFFF}" BorderThickness="0,1,0,0">
							<local:TreeControl x:Name="LeftFolder" ContextMenu="{StaticResource ContextMenuFileItem}" SelectionChanged="LeftFolder_SelectionChanged" Lines="{Binding LeftFolder}" HorizontalOffset="{Binding Value, ElementName=LeftFolderHorizontalScrollbar, Mode=TwoWay}" VerticalOffset="{Binding ElementName=VerticalTreeScrollbar, Path=Value, Mode=TwoWay}" UpdateTrigger="{Binding UpdateTrigger, Mode=TwoWay}" FocusVisualStyle="{x:Null}" />
						</Border>
						<ScrollBar Name="LeftFolderHorizontalScrollbar" Grid.Row="2" ValueChanged="LeftFolderHorizontalScrollbar_ValueChanged" Orientation="Horizontal" SmallChange="10" />
					</Grid>
				</Border>

				<!--  Left File  -->
				<Border Grid.Row="3" BorderThickness="0,1,1,1" PreviewDragOver="LeftSide_PreviewDragOver" PreviewDrop="LeftSide_DragDrop" AllowDrop="True">
					<Grid Name="LeftFileGrid" MouseWheel="FileDiff_MouseWheel" Background="{Binding WindowBackground, FallbackValue=#FFFFFF}">
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="auto" />
						</Grid.RowDefinitions>

						<local:DiffControl x:Name="LeftDiff" FontFamily="{Binding Font}" FontSize="{Binding ZoomedFontSize}" ContextMenu="{StaticResource ContextMenuFileItem}" Lines="{Binding LeftFile, Mode=TwoWay}" CurrentDiff="{Binding CurrentDiff, Mode=TwoWay}" VerticalOffset="{Binding ElementName=VerticalFileScrollbar, Path=Value, Mode=TwoWay}" HorizontalOffset="{Binding Value, ElementName=LeftHorizontalScrollbar, Mode=TwoWay}" Edited="{Binding LeftFileEdited, Mode=TwoWay}" EditMode="{Binding EditMode}" MaxVerialcalScroll="{Binding MaxLeftVerialcalScroll, Mode=OneWayToSource}" UpdateTrigger="{Binding UpdateTrigger}" GotFocus="LeftDiff_GotFocus" FocusVisualStyle="{x:Null}" ToolTip="-" />
						<ScrollBar x:Name="LeftHorizontalScrollbar" Grid.Row="1" Orientation="Horizontal" Maximum="{Binding ElementName=LeftDiff, Path=MaxHorizontalScroll}" ViewportSize="{Binding ElementName=LeftDiff, Path=TextAreaWidth}" ValueChanged="LeftHorizontalScrollbar_ValueChanged" SmallChange="10" LargeChange="{Binding ElementName=LeftDiff, Path=TextAreaWidth}" />
					</Grid>
				</Border>

				<!--  Left Status Bar  -->
				<Grid x:Name="LeftStatusBar" Grid.Row="5" Grid.Column="0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="auto" />
					</Grid.ColumnDefinitions>
					<TextBlock x:Name="Statusbar" Grid.Column="0" Margin="6,3,3,3" d:Text="Status text" Text="" Style="{StaticResource StyledTextBlock}" />
					<Border Grid.Column="1">
						<TextBlock Margin="10,3,3,3" Text="{Binding LeftFileDescription, FallbackValue=UTF-8 (Windows)}" Background="{Binding EncodingBackground}" Style="{StaticResource StyledTextBlock}" />
					</Border>

				</Grid>

				<!--  Splitter  -->
				<GridSplitter x:Name="SplitterMasterDetail" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Height="4" HorizontalAlignment="Stretch" Style="{StaticResource CommonGridSpliter}" Visibility="{Binding FolderVissible, Converter={StaticResource BooleanToVisibilityConverter}}" Focusable="False" Cursor="SizeNS" ResizeDirection="Rows" />
				<GridSplitter x:Name="SplitterLeftRight" Grid.RowSpan="6" Grid.Column="1" Width="4" HorizontalAlignment="Center" Style="{StaticResource CommonGridSpliter}" Focusable="False" />
				<Border Grid.Column="2" Grid.ColumnSpan="2" BorderThickness="1,1,0,0" PreviewDragOver="RightSide_PreviewDragOver" PreviewDrop="RightSide_DragDrop" AllowDrop="True">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<TextBox x:Name="TextBoxRightPath" Margin="0" Padding="2" Style="{StaticResource CommonTextBox}" Text="{Binding RightPath, FallbackValue=Right Path, UpdateSourceTrigger=LostFocus}" BorderThickness="0" BorderBrush="{StaticResource {x:Static SystemColors.ScrollBarBrushKey}}" PreviewDragOver="RightSide_PreviewDragOver" PreviewDrop="RightSide_DragDrop" />
						<Button x:Name="ButtonRightBrowse" Grid.Column="1" Width=" 20" Content="..." BorderThickness="0" Command="local:Commands.BrowseRight" />
					</Grid>
				</Border>

				<!--  Right Path  -->

				<!--  Right Folder  -->
				<Border Grid.Row="1" Grid.Column="2" BorderThickness="1,1,0,1" PreviewDragOver="RightSide_PreviewDragOver" PreviewDrop="RightSide_DragDrop" AllowDrop="True">
					<Grid Name="RightFolderGrid" MouseWheel="FolderDiff_MouseWheel">
						<Grid.RowDefinitions>
							<RowDefinition Height="auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>

						<Grid Grid.Row="1">
							<Grid.RowDefinitions>
								<RowDefinition Height="auto" />
								<RowDefinition Height="*" />
								<RowDefinition Height="auto" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="auto" />
							</Grid.ColumnDefinitions>

							<ScrollViewer Name="RightColumnScroll" ScrollChanged="RightColumnScroll_ScrollChanged" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden">
								<Grid Name="RightColumns" HorizontalAlignment="Left">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="{Binding NameColumnWidth}" />
										<ColumnDefinition Width="4" />
										<ColumnDefinition Width="{Binding SizeColumnWidth}" />
										<ColumnDefinition Width="4" />
										<ColumnDefinition Width="{Binding DateColumnWidth}" />
										<ColumnDefinition Width="4" />
									</Grid.ColumnDefinitions>

									<TextBlock Grid.Column="0" Padding="2" Text="Name" TextTrimming="CharacterEllipsis" SizeChanged="RightColumns_Resized" />
									<GridSplitter Grid.Column="1" Width="4" HorizontalAlignment="Left" BorderThickness="0,0,1,0" Focusable="False" Style="{StaticResource CommonGridSpliter}" />
									<TextBlock Grid.Column=" 2" Padding="2" Text="Size" TextTrimming="CharacterEllipsis" SizeChanged="RightColumns_Resized" TextAlignment="Right" />
									<GridSplitter Grid.Column=" 3" Width=" 4" HorizontalAlignment="Left" BorderThickness="0,0,1,0" Focusable=" False" Style="{StaticResource CommonGridSpliter}" />
									<TextBlock Grid.Column="4" Padding="2" Text="Date" TextTrimming="CharacterEllipsis" SizeChanged="RightColumns_Resized" />
									<GridSplitter Grid.Column=" 5" Width=" 4" HorizontalAlignment="Left" BorderThickness="0,0,1,0" Focusable=" False" Style="{StaticResource CommonGridSpliter}" />
								</Grid>
							</ScrollViewer>

							<Border Grid.Row="1" Background="{Binding WindowBackground, FallbackValue=#FFFFFF}" BorderThickness="0,1,0,0">
								<local:TreeControl x:Name="RightFolder" ContextMenu="{StaticResource ContextMenuFileItem}" SelectionChanged="RightFolder_SelectionChanged" Lines="{Binding RightFolder}" HorizontalOffset="{Binding Value, ElementName=RightFolderHorizontalScrollbar, Mode=TwoWay}" VerticalOffset="{Binding ElementName=VerticalTreeScrollbar, Path=Value, Mode=TwoWay}" UpdateTrigger="{Binding UpdateTrigger, Mode=TwoWay}" FocusVisualStyle="{x:Null}" />
							</Border>
							<Border Grid.Row="1" Grid.Column="1" BorderThickness="0,1,0,0">
								<ScrollBar Name="VerticalTreeScrollbar" SmallChange="1" LargeChange="{Binding ElementName=RightFolder, Path=VisibleLines}" ViewportSize="{Binding ElementName=RightFolder, Path=VisibleLines, Mode=TwoWay}" Maximum="{Binding ElementName=RightFolder, Path=MaxVerialcalScroll, Mode=TwoWay}" />
							</Border>
							<ScrollBar Name="RightFolderHorizontalScrollbar" Grid.Row="2" ValueChanged="RightFolderHorizontalScrollbar_ValueChanged" Orientation="Horizontal" SmallChange="10" />
						</Grid>
					</Grid>
				</Border>

				<!--  Right File  -->
				<Border Grid.Row="3" Grid.Column="2" BorderThickness="1,1,0,1" PreviewDragOver="RightSide_PreviewDragOver" PreviewDrop="RightSide_DragDrop" AllowDrop="True">
					<Grid Name="RightFileGrid" MouseWheel="FileDiff_MouseWheel" Background="{Binding WindowBackground, FallbackValue=#FFFFFF}">
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="auto" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<local:DiffControl x:Name="RightDiff" FontFamily="{Binding Font}" FontSize="{Binding ZoomedFontSize}" ContextMenu="{StaticResource ContextMenuFileItem}" Lines="{Binding RightFile, Mode=TwoWay}" VisibleLines="{Binding VisibleLines, Mode=OneWayToSource}" CurrentDiff="{Binding CurrentDiff, Mode=TwoWay}" VerticalOffset="{Binding ElementName=VerticalFileScrollbar, Path=Value, Mode=TwoWay}" HorizontalOffset="{Binding Value, ElementName=RightHorizontalScrollbar, Mode=TwoWay}" Edited="{Binding RightFileEdited, Mode=TwoWay}" EditMode="{Binding EditMode}" MaxVerialcalScroll="{Binding MaxRightVerialcalScroll, Mode=OneWayToSource}" UpdateTrigger="{Binding UpdateTrigger}" GotFocus="RightDiff_GotFocus" BorderThickness="0,0,1,0" BorderBrush="{StaticResource {x:Static SystemColors.ScrollBarBrushKey}}" FocusVisualStyle="{x:Null}" ToolTip="-" />
						<local:DiffMapControl Grid.Column="1" Width="12" Lines="{Binding RightFile}" UpdateTrigger="{Binding UpdateTrigger}" IsTabStop="False" Focusable="False" />
						<ScrollBar Name="VerticalFileScrollbar" Grid.Column="2" SmallChange="1" LargeChange="{Binding VisibleLines}" ViewportSize="{Binding ElementName=RightDiff, Path=VisibleLines, Mode=TwoWay}" Maximum="{Binding Path=MaxVerialcalScroll}" />
						<ScrollBar x:Name="RightHorizontalScrollbar" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" Maximum="{Binding ElementName=RightDiff, Path=MaxHorizontalScroll}" ViewportSize="{Binding ElementName=RightDiff, Path=TextAreaWidth}" ValueChanged="RightHorizontalScrollbar_ValueChanged" SmallChange="10" LargeChange="{Binding ElementName=RightDiff, Path=TextAreaWidth}" />
						<StackPanel Grid.Row="1" Grid.Column="2" Background="{Binding DialogBackground, FallbackValue=#FFF0F0F0}" />
					</Grid>
				</Border>

				<!--  Right Status Bar  -->
				<Grid x:Name="RightStatusBar" Grid.Row="5" Grid.Column="2">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="auto" />
						<ColumnDefinition Width="28" />
					</Grid.ColumnDefinitions>
					<Border Grid.Column="1">
						<TextBlock Margin="3" Text="{Binding RightFileDescription, FallbackValue=UTF-8 (Windows)}" Background="{Binding EncodingBackground}" Style="{StaticResource StyledTextBlock}" />
					</Border>
				</Grid>

				<!--  Search panel  -->
				<Border Name="SearchPanel" Grid.Row="4" Grid.ColumnSpan="3" BorderThickness="0,0,0,1">
					<DockPanel>
						<Grid Width="{Binding ElementName=LeftStatusBar, Path=ActualWidth}" DockPanel.Dock="Left" Visibility="{Binding FindPanelRight, Converter={StaticResource BooleanToVisibilityConverter}}" />
						<Grid DockPanel.Dock="Left">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" MaxWidth="300" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Button Grid.Column="0" Style="{StaticResource FlatButton}" Content="Close" Command="local:Commands.CloseFind" />
							<TextBox Name="SearchBox" Grid.Column="1" Margin="6,2" Padding="2" d:Text="Search Text" Style="{StaticResource CommonTextBox}" TextChanged="SearchBox_TextChanged" />
							<Button Grid.Column="2" Style="{StaticResource FlatButton}" Content="Next" Command="local:Commands.FindNext" />
							<Button Grid.Column="3" Style="{StaticResource FlatButton}" Content="Previous" Command="local:Commands.FindPrevious" />
							<CheckBox Name="MatchCase" Grid.Column="4" Margin="6,2" Padding="2" VerticalAlignment="Center" VerticalContentAlignment="Center" Style="{StaticResource CommonCheckBox}" Content="Match Case" Checked="MatchCase_Checked" Unchecked="MatchCase_Checked" />
						</Grid>
					</DockPanel>
				</Border>

				<!--  Used to measure the size of one character in the chosen font  -->
				<TextBlock x:Name="OneCharacter" Grid.Row="3" HorizontalAlignment="Left" VerticalAlignment="Top" Text="M" Visibility="Hidden" FontFamily="{Binding Font}" FontSize="{Binding FontSize}" />
			</Grid>

		</DockPanel>

		<!--  Compare Progress  -->
		<Grid Background="#00000000" Visibility="{Binding GuiFrozen, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue='Hidden'}" Cursor="Wait">
			<!--  Workaround to not fuckup the cleartype rendering  -->
			<Border Width="{Binding ActualWidth, ElementName=ProgressPanel}" Height="{Binding ActualHeight, ElementName=ProgressPanel}" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding Visibility, ElementName=ProgressPanel}" Background="{Binding WindowBackground, FallbackValue=White}">
				<Border.Effect>
					<DropShadowEffect BlurRadius="25" ShadowDepth="0" Opacity=".35" />
				</Border.Effect>
			</Border>
			<Border x:Name="ProgressPanel" HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="1" Cursor="Arrow">
				<StackPanel Margin="5">
					<Label HorizontalAlignment="Center" Content="Comparing..." />
					<StackPanel Orientation="Horizontal">
						<ProgressBar x:Name="ProgressBarCompare" Width="300" Margin="5" Value="40" />
						<Button x:Name="ButtonCancelCompare" HorizontalAlignment="Right" Style="{StaticResource CommonButton}" Content="Cancel" Command="local:Commands.CancelCompare" />
					</StackPanel>
				</StackPanel>
			</Border>
		</Grid>

	</Grid>
</Window>
