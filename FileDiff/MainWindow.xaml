<Window x:Class="FileDiff.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:FileDiff" mc:Ignorable="d" Title="File Diff - Alpha 3" Height="500" Width="700" TextOptions.TextFormattingMode="Display" UseLayoutRounding="True" ResizeMode="CanResizeWithGrip" Closed="Window_Closed" ContentRendered="Window_ContentRendered" Initialized="Window_Initialized">

	<Window.Resources>

		<DataTemplate x:Key="LineTemplate">
			<TextBlock Text="{Binding Text}">
				<TextBlock.Style>
					<Style TargetType="TextBlock">
						<Style.Triggers>
							<DataTrigger Binding="{Binding Type}" Value="FullMatch">
								<Setter Property="Foreground" Value="{Binding Path=WindowData.FullMatchForeground, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}" />
								<Setter Property="Background" Value="{Binding Path=WindowData.FullMatchBackground, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}" />
							</DataTrigger>
							<DataTrigger Binding="{Binding Type}" Value="PartialMatch">
								<Setter Property="Foreground" Value="{Binding Path=WindowData.PartialMatchForeground, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}" />
								<Setter Property="Background" Value="{Binding Path=WindowData.PartialMatchBackground, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}" />
							</DataTrigger>
							<DataTrigger Binding="{Binding Type}" Value="Deleted">
								<Setter Property="Foreground" Value="{Binding Path=WindowData.DeletedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}" />
								<Setter Property="Background" Value="{Binding Path=WindowData.DeletedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}" />
							</DataTrigger>
							<DataTrigger Binding="{Binding Type}" Value="New">
								<Setter Property="Foreground" Value="{Binding Path=WindowData.NewForeground, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}" />
								<Setter Property="Background" Value="{Binding Path=WindowData.NewBackground, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</TextBlock.Style>
			</TextBlock>
		</DataTemplate>


		<DataTemplate x:Key="ListTemplate">
			<StackPanel Orientation="Horizontal">
				<StackPanel.Style>
					<Style TargetType="StackPanel">
						<Style.Triggers>
							<DataTrigger Binding="{Binding Type}" Value="FullMatch">
								<Setter Property="Background" Value="{Binding Path=WindowData.FullMatchBackground, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}" />
							</DataTrigger>
							<DataTrigger Binding="{Binding Type}" Value="PartialMatch">
								<Setter Property="Background" Value="{Binding Path=WindowData.PartialMatchBackground, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}" />
							</DataTrigger>
							<DataTrigger Binding="{Binding Type}" Value="Deleted">
								<Setter Property="Background" Value="{Binding Path=WindowData.DeletedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}" />
							</DataTrigger>
							<DataTrigger Binding="{Binding Type}" Value="New">
								<Setter Property="Background" Value="{Binding Path=WindowData.NewBackground, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</StackPanel.Style>
				<Border BorderThickness="0,0,1,0" BorderBrush="{StaticResource {x:Static SystemColors.ScrollBarBrushKey} }">
					<TextBlock Text="{Binding LineIndex}" Width="30" TextAlignment="Right" Foreground="{StaticResource {x:Static SystemColors.ControlDarkBrushKey} }" Margin="0,0,2,0" HorizontalAlignment="Stretch" />
				</Border>
				<ItemsControl ItemsSource="{Binding TextSegments}" ItemTemplate="{StaticResource LineTemplate}" Padding="1,0,0,0" Focusable="False">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<StackPanel Orientation="Horizontal" />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
				</ItemsControl>
			</StackPanel>
		</DataTemplate>


	</Window.Resources>

	<Window.CommandBindings>
		<CommandBinding Command="local:Commands.Compare" Executed="CommandCompare_Executed" />
		<CommandBinding Command="local:Commands.PreviousDiff" Executed="CommandPreviousDiff_Executed" CanExecute="CommandPreviousDiff_CanExecute" />
		<CommandBinding Command="local:Commands.NextDiff" Executed="CommandNextDiff_Executed" CanExecute="CommandNextDiff_CanExecute" />
		<CommandBinding Command="local:Commands.Exit" Executed="CommandExit_Executed" />
		<CommandBinding Command="local:Commands.About" Executed="CommandAbout_Executed" />
		<CommandBinding Command="local:Commands.BrowseLeft" Executed="BrowseLeft_Executed" />
		<CommandBinding Command="local:Commands.BrowseRight" Executed="BrowseRight_Executed" />
		<CommandBinding Command="local:Commands.Options" Executed="Options_Executed" />
	</Window.CommandBindings>

	<DockPanel>

		<!--Menu-->
		<Border DockPanel.Dock="Top" BorderThickness="0,0,0,1" BorderBrush="{StaticResource  {x:Static SystemColors.ScrollBarBrushKey} }">
			<Grid x:Name="GridMenu">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>
				<Menu Grid.Row="0" Background="{StaticResource {x:Static SystemColors.WindowBrushKey}}" VerticalAlignment="Center" Margin="2">
					<MenuItem Header="File">
						<MenuItem Header="Exit" Command="local:Commands.Exit" />
					</MenuItem>
					<MenuItem Header="Tools">
						<MenuItem Header="Options" Command="local:Commands.Options" />
					</MenuItem>
					<MenuItem Header="Help">
						<MenuItem Header="About" Command="local:Commands.About" />
					</MenuItem>
				</Menu>
			</Grid>
		</Border>

		<!--Main Toolbar-->
		<WrapPanel DockPanel.Dock="Top" x:Name="ToolbarMain" Orientation="Horizontal">
			<WrapPanel.Background>
				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
					<GradientStop Color="{StaticResource {x:Static SystemColors.WindowColorKey}}" Offset="0" />
					<GradientStop Color="{StaticResource {x:Static SystemColors.ControlColorKey}}" Offset="1" />
				</LinearGradientBrush>
			</WrapPanel.Background>
			<Button Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" Command="local:Commands.Compare">
				<StackPanel Orientation="Horizontal">
					<ContentControl Content="{StaticResource CompareIcon}" Style="{StaticResource CommonButtonIcon}" />
					<TextBlock Text="Compare" VerticalAlignment="Center" />
				</StackPanel>
			</Button>
			<Button Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" Command="local:Commands.PreviousDiff">
				<StackPanel Orientation="Horizontal">
					<ContentControl Content="{StaticResource PreviousDiffIcon}" Style="{StaticResource CommonButtonIcon}" />
					<TextBlock Text="Previous Diff" VerticalAlignment="Center" />
				</StackPanel>
			</Button>
			<Button Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" Command="local:Commands.NextDiff">
				<StackPanel Orientation="Horizontal">
					<ContentControl Content="{StaticResource NextDiffIcon}" Style="{StaticResource CommonButtonIcon}" />
					<TextBlock Text="Next Diff" VerticalAlignment="Center" />
				</StackPanel>
			</Button>
			<ToggleButton x:Name="ToggleButtonShowLineChanges" Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" IsChecked="{Binding ShowLineChanges}" Focusable="False" Click="ToggleButtonShowLineChanges_Click">
				<StackPanel Orientation="Horizontal">

					<TextBlock Text="Show Line Changes" VerticalAlignment="Center" />
				</StackPanel>
			</ToggleButton>
			<ToggleButton x:Name="ToggleButtonIgnoreWhiteSpace" Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" IsChecked="{Binding IgnoreWhiteSpace}" Focusable="False" Click="ToggleButtonIgnoreWhiteSpace_Click">
				<StackPanel Orientation="Horizontal">

					<TextBlock Text="Ignore White Space" VerticalAlignment="Center" />
				</StackPanel>
			</ToggleButton>
		</WrapPanel>

		<!--Status Bar-->
		<Grid DockPanel.Dock="Bottom" Background="{StaticResource {x:Static SystemColors.ControlBrushKey}}">
			<TextBlock x:Name="Statusbar" Text="Status" Margin="2" />
		</Grid>

		<!--Diff-->
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="327*" />
			</Grid.RowDefinitions>

			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>

			<Border Grid.Column="0" BorderThickness="0,1,1,1" BorderBrush="{StaticResource {x:Static SystemColors.ScrollBarBrushKey} }">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>

					<TextBox Grid.Column="0" Text="{Binding LeftPath, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" Padding="2" BorderBrush="{StaticResource {x:Static SystemColors.ScrollBarBrushKey} }" />
					<Button x:Name="ButtonLeftBrowse" Grid.Column="1" Content="..." Width=" 20" BorderThickness="0" Command="local:Commands.BrowseLeft" />
				</Grid>
			</Border>

			<Border Grid.Column="0" Grid.Row="1" BorderThickness="0,0,1,1" BorderBrush="{StaticResource {x:Static SystemColors.ScrollBarBrushKey} }" AllowDrop="True" PreviewDragEnter="LeftSide_DragEnter" PreviewDrop="LeftSide_DragDrop">
				<ItemsControl x:Name="LeftDiff" ItemsSource="{Binding LeftSide}" ItemTemplate="{StaticResource ListTemplate}" VirtualizingStackPanel.IsVirtualizing="True" ScrollViewer.CanContentScroll="True" FontFamily="{Binding Font}" FontSize="{Binding FontSize}" IsTabStop="False" Focusable="False">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
					<ItemsControl.Template>
						<ControlTemplate>
							<ScrollViewer x:Name="LeftScroll" Padding="{TemplateBinding Control.Padding}" Focusable="False" ScrollChanged="LeftScroll_ScrollChanged" Initialized="LeftScrollInitialized" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Hidden">
								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
							</ScrollViewer>
						</ControlTemplate>
					</ItemsControl.Template>
				</ItemsControl>
			</Border>

			<GridSplitter Grid.Column="1" Width="4" HorizontalAlignment="Center" Focusable="False" Grid.RowSpan="2" />

			<Border Grid.Column="2" BorderThickness="1,1,0,1" BorderBrush="{StaticResource {x:Static SystemColors.ScrollBarBrushKey} }">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>

					<TextBox Text="{Binding RightPath, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" Padding="2" BorderBrush="{StaticResource {x:Static SystemColors.ScrollBarBrushKey} }" />
					<Button x:Name="ButtonRightBrowse" Grid.Column="1" Content="..." Width=" 20" BorderThickness="0" Command="local:Commands.BrowseRight" />
				</Grid>
			</Border>

			<Border Grid.Column="2" Grid.Row="1" BorderThickness="1,0,0,1" BorderBrush="{StaticResource {x:Static SystemColors.ScrollBarBrushKey} }" AllowDrop="True" PreviewDragEnter="RightSide_DragEnter" PreviewDrop="RightSide_DragDrop">
				<ItemsControl x:Name="RightDiff" ItemsSource="{Binding RightSide}" ItemTemplate="{StaticResource ListTemplate}" VirtualizingStackPanel.IsVirtualizing="True" ScrollViewer.CanContentScroll="True" FontFamily="{Binding Font}" FontSize="{Binding FontSize}" IsTabStop="False" Focusable="False">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
					<ItemsControl.Template>
						<ControlTemplate>
							<ScrollViewer x:Name="RightScroll" Padding="{TemplateBinding Control.Padding}" Focusable="False" ScrollChanged="RightScroll_ScrollChanged" Initialized="RightScrollInitialized" HorizontalScrollBarVisibility="Visible">
								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
							</ScrollViewer>
						</ControlTemplate>
					</ItemsControl.Template>
				</ItemsControl>
			</Border>

			<!-- Used to measure the size of one character in the chosen font -->
			<TextBlock x:Name="OneCharacter" Text="M" Visibility="Hidden" FontFamily="{Binding Font}" FontSize="{Binding FontSize}" HorizontalAlignment="Left" VerticalAlignment="Top" />
		</Grid>

	</DockPanel>

</Window>
